# version: "3.8"

services:
# =========================
# FRONTEND
# =========================

# svelte kit main frontend app
  client-svc:
    build:
      context: "./CLIENT/."
      dockerfile: Dockerfile
    container_name: CLIENT
    ports:
      - "80:3000"
    networks:
      - "cloud-netwerk"
      
  client-devstats:
    build:
      context: "./CLIENT_DEVSTATS"
      dockerfile: Dockerfile
    container_name: CLIENT_DEVSTATS
    ports:
      - "8082:80"
    networks:
      - "cloud-netwerk"
    attach: false # ik hoef geen console logs te zien
# =========================
# DATABASES
# =========================

# mongodb database voor algemene data
  db-mongo:
    image: mongo
    restart: always
    container_name: DB-mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo_root
      MONGO_INITDB_ROOT_PASSWORD: mongo123
    # expose:
    #   - "27017"
    ports: # DEBUG
      - "27017:27017"
    volumes:
    - mongo-data:/data/db
    networks:
      - "cloud-netwerk"
    attach: false # ik hoef geen console logs te zien

# mysql database voor user data
  db-mysql:
    image: mysql:9.1.0
    restart: always
    container_name: DB-mysql
    environment:
      MYSQL_USER: "mysql_root"
      MYSQL_PASSWORD: "mysql123"
      MYSQL_ROOT_PASSWORD: "mysql123"
      MYSQL_DATABASE: "cloud_project_db"
    # expose:
    #  - "3306"
    ports: # DEBUG
      - "3306:3306"
    networks:
      - "cloud-netwerk"
    volumes:
      - mysql-data:/var/lib/mysql
    attach: false # ik hoef geen console logs te zien

# =========================
# DATABASE CLIENTS  
# =========================

# mongodb
  db-client-mongo:
    image: mongo-express
    restart: always
    container_name: DB_CLIENT-mongo
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: mongo_root
      ME_CONFIG_MONGODB_ADMINPASSWORD: mongo123
      ME_CONFIG_MONGODB_URL: mongodb://mongo_root:mongo123@db-mongo:27017/
      ME_CONFIG_SITE_BASEURL: /proxy/mongo
      ME_CONFIG_BASICAUTH_USERNAME: "admin"
      ME_CONFIG_BASICAUTH_PASSWORD: "123"
      ME_CONFIG_BASICAUTH: true
      ME_CONFIG_OPTIONS_EDITABLEJSON: "true"
      ME_CONFIG_SHOW_DBS: "true"
    ports:
      - "8081:8081"
    networks:
      - "cloud-netwerk"
    attach: false # ik hoef geen console logs te zien

# mysql
  db-client-mysql:
    image: adminer
    restart: always
    container_name: DB_CLIENT-mysql
    ports:
      - "8080:8080"
    networks:
      - "cloud-netwerk"
    attach: false # ik hoef geen console logs te zien

# =========================
# CORE MICROSERVICES 
# =========================

  core-apapter-rest:
    build:
      context: "./CORE_ADAPTER - rest"
      dockerfile: Dockerfile
    container_name: CORE_ADAPTER-REST
    ports:
      - "3001:3001"
    networks:
      - "cloud-netwerk"

  core-gateway-grpc:
    build:
      context: "./CORE_GATEWAY - grpc"
      dockerfile: Dockerfile
    container_name: CORE_GATEWAY-GRPC
    # expose:
    #   - "3006"
    ports: # DEBUG
      - "3006:3006"
    networks:
      - "cloud-netwerk"

  core-notifier-ws-rest:
    build:
      context: "./CORE_NOTIFIER - websocket+rest"
      dockerfile: Dockerfile
    container_name: CORE_NOTIFIER-WS-REST
    # expose:
    #   - "3004"
    #   - "3005"
    ports:
      - "3004:3004" #ws
      - "3005:3005" #rest (debug)
    networks:
      - "cloud-netwerk"
# =========================
# APP MICROSERVICES  
# =========================

  app-ghstats-rest:
    build:
      context: "./APP_GHSTATS - rest"
      dockerfile: Dockerfile
    container_name: APP_GHSTATS-REST
    ports:
      - "3010:3010"
    networks:
      - "cloud-netwerk"
  app-project-db-rest:
    build:
      context: "./APP_PROJECT_DB - rest"
      dockerfile: Dockerfile
    container_name: APP_PROJECT_DB-REST
    # expose:
    #  - "3008"
    ports: # debug
      - "3008:3008"
    networks:
      - "cloud-netwerk"

  app-project-facade-rpc:
    build:
      context: "./APP_PROJECT_FACADE - rpc"
      dockerfile: Dockerfile
    container_name: APP_PROJECT_FACADE-RPC
    # expose:
    #  - "3009"
    ports: # debug
      - "3009:3009"
    networks:
      - "cloud-netwerk"

  app-devstats-soap:
    build:
      context: "./APP_DEVSTATS - soap"
      dockerfile: Dockerfile
    container_name: APP_DEVSTATS-SOAP
    # expose:
    #  - "3007"
    ports: # DEBUG
      - "3007:3007"
    networks:
      - "cloud-netwerk"
      
  app-auth-rest:
    build:
      context: "./APP_AUTH - rest"
      dockerfile: Dockerfile
    container_name: APP_AUTH-REST
    # expose:
    #  - "3003"
    ports: # DEBUG
      - "3003:3003"
    networks:
      - "cloud-netwerk"

  app-userdb-graphql:
    build:
      context: "./APP_USERDB - graphql"
      dockerfile: Dockerfile
    container_name: APP_USERDB-GRAPHQL
    # expose:
    #   - "3002"
    ports: # DEBUG
      - "3002:3002"
    networks:
      - "cloud-netwerk"

networks:
  cloud-netwerk:
volumes:
  mysql-data:
  mongo-data: